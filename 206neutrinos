#!/usr/bin/env python3

import sys
from math import *

def get_args():
    tab = []
    try:
        for i in range (1, 5):
            tab.append(int(sys.argv[i]))
            if(tab[i - 1] < 0):
                sys.exit(84)
    except ValueError:
        sys.exit(84)
    return tab

def get_input():
    try:
        in_value = input("Enter next value: ")
    except:
        sys.exit(84)
    if (in_value == "END"):
        sys.exit(0)
    try:
        in_nb = int(in_value)
    except ValueError:
        sys.exit(84)
    return in_nb

def get_std_dev(args, in_nb):
    return sqrt((((pow(args[3], 2) + pow(args[1], 2)) * (args[0] - 1) + pow(in_nb, 2)) / args[0])
            - pow(((args[1] * (args[0] - 1)) + in_nb) / args[0], 2))

def get_arith_mean(args, in_nb):
    return ((args[1] * (args[0] - 1)) + in_nb) / args[0]

def get_root_mean(args, in_nb):
    return sqrt((((pow(args[3], 2) + pow(args[1], 2)) * (args[0] - 1)) + pow(in_nb, 2)) / args[0])

def get_harmo_mean(args, in_nb):
    return args[0] / (((1 / args[2]) * (args[0] - 1)) + (1 / in_nb))

def display_result(args, std_dev, arith_mean, root_mean, harmo_mean):
    print("\tNumber of values:\t%d" % args[0])
    print("\tStandard deviation:\t%.2f" % std_dev)
    print("\tArithmetic mean:\t%.2f" % arith_mean)
    print("\tRoot mean square:\t%.2f" % root_mean)
    print("\tHarmonic mean:\t\t%.2f\n" % harmo_mean)

def replace_args(args, std_dev, arith_mean, harmo_mean):
    args[1] = arith_mean
    args[2] = harmo_mean
    args[3] = std_dev

def loop(args):
    while (1):
        in_nb = get_input()
        args[0] += 1
        std_dev = get_std_dev(args, in_nb)
        arith_mean = get_arith_mean(args, in_nb)
        root_mean = get_root_mean(args, in_nb)
        harmo_mean = get_harmo_mean(args, in_nb)
        display_result(args, std_dev, arith_mean, root_mean, harmo_mean)
        replace_args(args, std_dev, arith_mean, harmo_mean)

def main():
    if (len(sys.argv) != 5):
        sys.exit(84)
    args = get_args()
    loop(args)
    exit(0)

main()